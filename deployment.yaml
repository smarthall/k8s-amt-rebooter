---
apiVersion: v1
kind: Namespace
metadata:
  name: amt-rebooter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: amt-rebooter
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "get", "patch", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: amt-rebooter
subjects:
- kind: ServiceAccount
  namespace: amt-rebooter
  name: default
roleRef:
  kind: ClusterRole
  name: amt-rebooter
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kopf-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: amt-rebooter
  name: kopf-role-namespaced
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kopf-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kopf-role-cluster
subjects:
  - kind: ServiceAccount
    name: default
    namespace: amt-rebooter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: amt-rebooter
  name: kopf-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kopf-role-namespaced
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: amt-rebooter
  name: amt-rebooter-config
data:
  config: |
    ---
    talos-192-168-70-20:
      address: 192.168.71.20
      username: admin
      password: Kub3Rul3$
    talos-192-168-70-21:
      address: 192.168.71.21
      username: admin
      password: Kub3Rul3$
    talos-192-168-70-22:
      address: 192.168.71.22
      username: admin
      password: Kub3Rul3$
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amt-rebooter
  namespace: amt-rebooter
spec:
  selector:
    matchLabels:
      service: amt-rebooter
  replicas: 1
  template:
    metadata:
      labels:
        service: amt-rebooter
    spec:
      containers:
      - name: operator
        image: ghcr.io/smarthall/k8s-amt-rebooter:v1.0.0
        resources:
          requests:
            cpu: "0.01"
            memory: 100Mi
          limits:
            cpu: "2"
            memory: 1Gi
        volumeMounts:
          - name: config
            mountPath: /usr/src/app/config.yaml
            subPath: config
      volumes:
      - name: config
        configMap:
          name: amt-rebooter-config
